// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package sdctverifier

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// BN128G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN128G1Point struct {
	X *big.Int
	Y *big.Int
}

// SDCTVerifierAggProof is an auto generated low-level Go binding around an user-defined struct.
type SDCTVerifierAggProof struct {
	A   BN128G1Point
	S   BN128G1Point
	T1  BN128G1Point
	T2  BN128G1Point
	T   *big.Int
	Txx *big.Int
	U   *big.Int
	L   []BN128G1Point
	R   []BN128G1Point
	Ap  *big.Int
	Bp  *big.Int
}

// SDCTVerifierCT is an auto generated low-level Go binding around an user-defined struct.
type SDCTVerifierCT struct {
	X BN128G1Point
	Y BN128G1Point
}

// SDCTVerifierCTVProof is an auto generated low-level Go binding around an user-defined struct.
type SDCTVerifierCTVProof struct {
	A  BN128G1Point
	B  BN128G1Point
	Z1 *big.Int
	Z2 *big.Int
}

// SDCTVerifierDLEProof is an auto generated low-level Go binding around an user-defined struct.
type SDCTVerifierDLEProof struct {
	A1 BN128G1Point
	A2 BN128G1Point
	Z  *big.Int
}

// SDCTVerifierMRCT is an auto generated low-level Go binding around an user-defined struct.
type SDCTVerifierMRCT struct {
	X1 BN128G1Point
	X2 BN128G1Point
	X3 BN128G1Point
	Y  BN128G1Point
}

// SDCTVerifierPTEProof is an auto generated low-level Go binding around an user-defined struct.
type SDCTVerifierPTEProof struct {
	A1 BN128G1Point
	A2 BN128G1Point
	A3 BN128G1Point
	B  BN128G1Point
	Z1 *big.Int
	Z2 *big.Int
}

// SDCTVerifierTransferProof is an auto generated low-level Go binding around an user-defined struct.
type SDCTVerifierTransferProof struct {
	PteProof SDCTVerifierPTEProof
	DleProof SDCTVerifierDLEProof
	CtvProof SDCTVerifierCTVProof
	AggProof SDCTVerifierAggProof
}

// SDCTVerifierTransferStatement is an auto generated low-level Go binding around an user-defined struct.
type SDCTVerifierTransferStatement struct {
	Pk1     BN128G1Point
	Pk2     BN128G1Point
	Mrct    SDCTVerifierMRCT
	Updated SDCTVerifierCT
	Refresh SDCTVerifierCT
	Custom  []*big.Int
}

// SdctverifierABI is the input ABI used to generate the binding from.
const SdctverifierABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sdctSetup_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"bitSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"g\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gVector\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"h\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hVector\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"n\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pkauth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sdctSetup\",\"outputs\":[{\"internalType\":\"contractSDCTSetup\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"uBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"step\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256[40]\",\"name\":\"points\",\"type\":\"uint256[40]\"},{\"internalType\":\"uint256[10]\",\"name\":\"scalar\",\"type\":\"uint256[10]\"},{\"internalType\":\"uint256[12]\",\"name\":\"l\",\"type\":\"uint256[12]\"},{\"internalType\":\"uint256[12]\",\"name\":\"r\",\"type\":\"uint256[12]\"},{\"internalType\":\"uint256[4]\",\"name\":\"ct\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A3\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"B\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"z1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z2\",\"type\":\"uint256\"}],\"internalType\":\"structSDCTVerifier.PTEProof\",\"name\":\"pteProof\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"internalType\":\"structSDCTVerifier.DLEProof\",\"name\":\"dleProof\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"B\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"z1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z2\",\"type\":\"uint256\"}],\"internalType\":\"structSDCTVerifier.CTVProof\",\"name\":\"ctvProof\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"S\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"u\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"l\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"r\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"ap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bp\",\"type\":\"uint256\"}],\"internalType\":\"structSDCTVerifier.AggProof\",\"name\":\"aggProof\",\"type\":\"tuple\"}],\"internalType\":\"structSDCTVerifier.TransferProof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"pk1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"pk2\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"X1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"X2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"X3\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"Y\",\"type\":\"tuple\"}],\"internalType\":\"structSDCTVerifier.MRCT\",\"name\":\"mrct\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"X\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"Y\",\"type\":\"tuple\"}],\"internalType\":\"structSDCTVerifier.CT\",\"name\":\"updated\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"X\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"Y\",\"type\":\"tuple\"}],\"internalType\":\"structSDCTVerifier.CT\",\"name\":\"refresh\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"custom\",\"type\":\"uint256[]\"}],\"internalType\":\"structSDCTVerifier.TransferStatement\",\"name\":\"state\",\"type\":\"tuple\"}],\"name\":\"verifyTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"publicKey\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[4]\",\"name\":\"proof\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"},{\"internalType\":\"uint256[4]\",\"name\":\"ub\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256[]\",\"name\":\"input\",\"type\":\"uint256[]\"}],\"name\":\"verifyBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// SdctverifierBin is the compiled bytecode used for deploying new contracts.
var SdctverifierBin = "0x60806040523480156200001157600080fd5b506040516200526d3803806200526d833981810160405262000037919081019062000a66565b8061010860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000836200093a565b61010860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382529fdb6040518163ffffffff1660e01b8152600401604080518083038186803b158015620000ec57600080fd5b505afa15801562000101573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000127919081019062000a92565b9050620001336200093a565b61010860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304c09ce96040518163ffffffff1660e01b8152600401604080518083038186803b1580156200019c57600080fd5b505afa158015620001b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620001d7919081019062000a92565b9050620001e36200093a565b61010860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d6147d6040518163ffffffff1660e01b8152600401604080518083038186803b1580156200024c57600080fd5b505afa15801562000261573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000287919081019062000a92565b9050620002936200093a565b61010860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ac9e14f56040518163ffffffff1660e01b8152600401604080518083038186803b158015620002fc57600080fd5b505afa15801562000311573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000337919081019062000a92565b9050836000600281106200034757fe5b60200201516000800181905550836001600281106200036257fe5b6020020151600060010181905550826000600281106200037e57fe5b6020020151600260000181905550826001600281106200039a57fe5b602002015160026001018190555081600060028110620003b657fe5b602002015160046000018190555081600160028110620003d257fe5b602002015160046001018190555080600060028110620003ee57fe5b6020020151600660000181905550806001600281106200040a57fe5b602002015160066001018190555061010860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663da8972246040518163ffffffff1660e01b815260040160206040518083038186803b1580156200048257600080fd5b505afa15801562000497573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620004bd919081019062000abe565b60201462000502576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004f99062000c16565b60405180910390fd5b6200051460206200051f60201b60201c565b505050505062000d21565b60008090505b600260200281101562000565576000600882604081106200054257fe5b60020201600001541415620005575762000565565b808060010191505062000525565b6040811015620005845762000583818383016200058860201b60201c565b5b5050565b6000620005946200095c565b604051806040016040528060018152602001600281525090506000620005ee604051602001620005c49062000be2565b6040516020818303038152906040528051906020012060001c620007a760201b6200287b1760201c565b905060008590505b8481108015620006095750600260200281105b15620006a5576200065281830160405160200162000628919062000bf9565b6040516020818303038152906040528051906020012060001c620007a760201b6200287b1760201c565b93506200066e8484620007e060201b620025991790919060201c565b600882604081106200067c57fe5b6002020160008201518160000155602082015181600101559050508080600101915050620005f6565b506000620006e7604051602001620006bd9062000bcb565b6040516020818303038152906040528051906020012060001c620007a760201b6200287b1760201c565b905060008690505b8581108015620007025750600260200281105b156200079e576200074b82820160405160200162000721919062000bf9565b6040516020818303038152906040528051906020012060001c620007a760201b6200287b1760201c565b9450620007678585620007e060201b620025991790919060201c565b608882604081106200077557fe5b6002020160008201518160000155602082015181600101559050508080600101915050620006ef565b50505050505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050808381620007d757fe5b06915050919050565b620007ea6200095c565b6001821415620007fd5782905062000893565b600282141562000821576200081983846200089960201b60201c565b905062000893565b6200082b62000976565b8360000151816000600381106200083e57fe5b6020020181815250508360200151816001600381106200085a57fe5b60200201818152505082816002600381106200087257fe5b6020020181815250506040826060836007600019fa6200089157600080fd5b505b92915050565b620008a36200095c565b620008ad62000998565b836000015181600060048110620008c057fe5b602002018181525050836020015181600160048110620008dc57fe5b602002018181525050826000015181600260048110620008f857fe5b6020020181815250508260200151816003600481106200091457fe5b6020020181815250506040826080836006600019fa6200093357600080fd5b5092915050565b6040518060400160405280600290602082028038833980820191505090505090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b600081519050620009cb8162000ced565b92915050565b600082601f830112620009e357600080fd5b6002620009fa620009f48262000c66565b62000c38565b9150818385602084028201111562000a1157600080fd5b60005b8381101562000a45578162000a2a888262000a4f565b84526020840193506020830192505060018101905062000a14565b5050505092915050565b60008151905062000a608162000d07565b92915050565b60006020828403121562000a7957600080fd5b600062000a8984828501620009ba565b91505092915050565b60006040828403121562000aa557600080fd5b600062000ab584828501620009d1565b91505092915050565b60006020828403121562000ad157600080fd5b600062000ae18482850162000a4f565b91505092915050565b600062000af960038362000c9a565b91507f68767300000000000000000000000000000000000000000000000000000000006000830152600382019050919050565b600062000b3b60118362000c89565b91507f62697473697a65206e6f7420657175616c0000000000000000000000000000006000830152602082019050919050565b600062000b7d60038362000c9a565b91507f67767300000000000000000000000000000000000000000000000000000000006000830152600382019050919050565b62000bc562000bbf8262000cd9565b62000ce3565b82525050565b600062000bd88262000aea565b9150819050919050565b600062000bef8262000b6e565b9150819050919050565b600062000c07828462000bb0565b60208201915081905092915050565b6000602082019050818103600083015262000c318162000b2c565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171562000c5c57600080fd5b8060405250919050565b600067ffffffffffffffff82111562000c7e57600080fd5b602082029050919050565b600082825260208201905092915050565b600081905092915050565b600062000cb28262000cb9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000819050919050565b62000cf88162000ca5565b811462000d0457600080fd5b50565b62000d128162000cd9565b811462000d1e57600080fd5b50565b61453c8062000d316000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80634a3f28671161008c578063b7b0422d11610066578063b7b0422d1461022e578063b8c9d3651461024a578063cccae02814610269578063e2179b8e14610299576100cf565b80634a3f2867146101af57806356e2736c146101df578063718aece714610210576100cf565b80630214120b146100d45780630c00f8a0146100f35780631213e2011461012457806326f9031b146101435780632e52d606146101735780633e8d376414610191575b600080fd5b6100dc6102b8565b6040516100ea9291906142b7565b60405180910390f35b61010d60048036036101089190810190613d2a565b6102ca565b60405161011b9291906142b7565b60405180910390f35b61012c6102f1565b60405161013a9291906142b7565b60405180910390f35b61015d60048036036101589190810190613d53565b610303565b60405161016a91906141c6565b60405180910390f35b61017b6104ab565b604051610188919061429c565b60405180910390f35b6101996104b0565b6040516101a6919061429c565b60405180910390f35b6101c960048036036101c49190810190613cbe565b6104b5565b6040516101d691906141c6565b60405180910390f35b6101f960048036036101f49190810190613d2a565b610664565b6040516102079291906142b7565b60405180910390f35b61021861068b565b60405161022591906141e1565b60405180910390f35b61024860048036036102439190810190613d2a565b6106b2565b005b61025261070d565b6040516102609291906142b7565b60405180910390f35b610283600480360361027e9190810190613c19565b61071f565b60405161029091906141c6565b60405180910390f35b6102a1611070565b6040516102af9291906142b7565b60405180910390f35b60068060000154908060010154905082565b600881604081106102d757fe5b600202016000915090508060000154908060010154905082565b60048060000154908060010154905082565b600061030d612e2f565b8360006004811061031a57fe5b6020020151816000015160000181815250508360016004811061033957fe5b6020020151816000015160200181815250508360026004811061035857fe5b6020020151816020015160000181815250508360036004811061037757fe5b602002015181602001516020018181525050610391612e55565b6040518060400160405280886000600481106103a957fe5b60200201518152602001886001600481106103c057fe5b602002015181525081600001819052506040518060400160405280886002600481106103e857fe5b60200201518152602001886003600481106103ff57fe5b602002015181525081602001819052508581604001818152505061045c898360405180604001604052808c60006002811061043657fe5b602002015181526020018c60016002811061044d57fe5b60200201518152508488611082565b61049b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104929061423c565b60405180910390fd5b6001925050509695505050505050565b600581565b602081565b60006104d38260000151836020015184604001518660000151611141565b610512576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105099061425c565b60405180910390fd5b61053382606001518360800151846000015186602001518660a001516113f4565b610572576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105699061427c565b60405180910390fd5b61058982600001518360800151856040015161148b565b6105c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bf906141fc565b60405180910390fd5b6105d0612e82565b826040015160600151816000600281106105e657fe5b60200201819052508260800151602001518160016002811061060457fe5b602002018190525061061a818560600151611633565b610659576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106509061421c565b60405180910390fd5b600191505092915050565b6088816040811061067157fe5b600202016000915090508060000154908060010154905082565b61010860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008090505b60026020028110156106f3576000600882604081106106d357fe5b600202016000015414156106e6576106f3565b80806001019150506106b8565b604081101561070957610708818383016123ce565b5b5050565b60008060000154908060010154905082565b6000610729612eaf565b610731612eef565b60405180604001604052808b60006028811061074957fe5b602002015181526020018b60016028811061076057fe5b6020020151815250816000018190525060405180604001604052808b60026028811061078857fe5b602002015181526020018b60036028811061079f57fe5b602002015181525081602001819052506040518060400160405280876000600481106107c757fe5b60200201518152602001876001600481106107de57fe5b602002015181525081606001516000018190525060405180604001604052808760026004811061080a57fe5b602002015181526020018760036004811061082157fe5b602002015181525081606001516020018190525060405180604001604052808b60146028811061084d57fe5b602002015181526020018b60156028811061086457fe5b602002015181525081608001516000018190525060405180604001604052808b60166028811061089057fe5b602002015181526020018b6017602881106108a757fe5b602002015181525081608001516020018190525060405180604001604052808b6004602881106108d357fe5b602002015181526020018b6005602881106108ea57fe5b602002015181525081604001516000018190525060405180604001604052808b60066028811061091657fe5b602002015181526020018b60076028811061092d57fe5b602002015181525081604001516020018190525060405180604001604052808b60086028811061095957fe5b602002015181526020018b60096028811061097057fe5b602002015181525081604001516040018190525060405180604001604052808b600a6028811061099c57fe5b602002015181526020018b600b602881106109b357fe5b6020020151815250816040015160600181905250600e6040519080825280602002602001820160405280156109f75781602001602082028038833980820191505090505b508160a00181905250848160a00151600081518110610a1257fe5b602002602001018181525050838160a00151600181518110610a3057fe5b60200260200101818152505060008090505b600c811015610a88578a8160288110610a5757fe5b60200201518260a001518260020181518110610a6f57fe5b6020026020010181815250508080600101915050610a42565b5060405180604001604052808b600c60288110610aa157fe5b602002015181526020018b600d60288110610ab857fe5b602002015181525082600001516000018190525060405180604001604052808b600e60288110610ae457fe5b602002015181526020018b600f60288110610afb57fe5b602002015181525082600001516020018190525060405180604001604052808b601060288110610b2757fe5b602002015181526020018b601160288110610b3e57fe5b602002015181525082600001516040018190525060405180604001604052808b601260288110610b6a57fe5b602002015181526020018b601360288110610b8157fe5b6020020151815250826000015160600181905250886000600a8110610ba257fe5b602002015182600001516080018181525050886001600a8110610bc157fe5b6020020151826000015160a001818152505060405180604001604052808b601c60288110610beb57fe5b602002015181526020018b601d60288110610c0257fe5b602002015181525082602001516000018190525060405180604001604052808b601e60288110610c2e57fe5b602002015181526020018b601f60288110610c4557fe5b6020020151815250826020015160200181905250886004600a8110610c6657fe5b60200201518260200151604001818152505060405180604001604052808b601860288110610c9057fe5b602002015181526020018b601960288110610ca757fe5b602002015181525082604001516000018190525060405180604001604052808b601a60288110610cd357fe5b602002015181526020018b601b60288110610cea57fe5b6020020151815250826040015160200181905250886002600a8110610d0b57fe5b602002015182604001516040018181525050886003600a8110610d2a57fe5b60200201518260400151606001818152505060405180604001604052808b602060288110610d5457fe5b602002015181526020018b602160288110610d6b57fe5b602002015181525082606001516000018190525060405180604001604052808b602260288110610d9757fe5b602002015181526020018b602360288110610dae57fe5b602002015181525082606001516020018190525060405180604001604052808b602460288110610dda57fe5b602002015181526020018b602560288110610df157fe5b602002015181525082606001516040018190525060405180604001604052808b602660288110610e1d57fe5b602002015181526020018b602760288110610e3457fe5b6020020151815250826060015160600181905250886005600a8110610e5557fe5b602002015182606001516080018181525050886006600a8110610e7457fe5b6020020151826060015160a0018181525050886007600a8110610e9357fe5b6020020151826060015160c0018181525050886008600a8110610eb257fe5b60200201518260600151610120018181525050886009600a8110610ed257fe5b602002015182606001516101400181815250506001600501604051908082528060200260200182016040528015610f2357816020015b610f10612f43565b815260200190600190039081610f085790505b50826060015160e001819052506001600501604051908082528060200260200182016040528015610f6e57816020015b610f5b612f43565b815260200190600190039081610f535790505b508260600151610100018190525060008090505b60016005018110156110565760405180604001604052808a60028402600c8110610fa857fe5b602002015181526020018a60018460020201600c8110610fc457fe5b6020020151815250836060015160e001518281518110610fe057fe5b602002602001018190525060405180604001604052808960028402600c811061100557fe5b602002015181526020018960018460020201600c811061102157fe5b602002015181525083606001516101000151828151811061103e57fe5b60200260200101819052508080600101915050610f82565b5061106182826104b5565b92505050979650505050505050565b60028060000154908060010154905082565b600061108c612f5d565b6110dd6110ca6110c58960006040518060400160405290816000820154815260200160018201548152505061259990919063ffffffff16565b61263e565b87602001516126ce90919063ffffffff16565b90506110e7612f5d565b866000015190506110f6612f5d565b6002604051806040016040529081600082015481526020016001820154815250509050611121612f5d565b879050611132848484848b8b612766565b94505050505095945050505050565b6000806111b083600001516000015184600001516020015185602001516000015186602001516020015187606001516000015188606001516020015160405160200161119296959493929190614156565b6040516020818303038152906040528051906020012060001c61287b565b90506111ba612f5d565b6111d184608001518861259990919063ffffffff16565b90506111db612f5d565b61120885600001516111fa85896000015161259990919063ffffffff16565b6126ce90919063ffffffff16565b905061121d81836128b390919063ffffffff16565b61122d57600093505050506113ec565b61124485608001518861259990919063ffffffff16565b9150611273856020015161126585896020015161259990919063ffffffff16565b6126ce90919063ffffffff16565b905061128881836128b390919063ffffffff16565b61129857600093505050506113ec565b6112cf856080015160066040518060400160405290816000820154815260200160018201548152505061259990919063ffffffff16565b91506112fe85604001516112f085896040015161259990919063ffffffff16565b6126ce90919063ffffffff16565b905061131381836128b390919063ffffffff16565b61132357600093505050506113ec565b6113a261135d8660a0015160006040518060400160405290816000820154815260200160018201548152505061259990919063ffffffff16565b611394876080015160026040518060400160405290816000820154815260200160018201548152505061259990919063ffffffff16565b6126ce90919063ffffffff16565b91506113d16113be84886060015161259990919063ffffffff16565b86606001516126ce90919063ffffffff16565b90506113e681836128b390919063ffffffff16565b93505050505b949350505050565b60006113fe612f5d565b61142161140e886020015161263e565b87602001516126ce90919063ffffffff16565b905061142b612f5d565b61144e61143b896000015161263e565b88600001516126ce90919063ffffffff16565b905061147e8282600260405180604001604052908160008201548152602001600182015481525050898989612766565b9250505095945050505050565b6000806114e68360000151600001518460000151602001518560200151600001518660200151602001516040516020016114c89493929190614108565b6040516020818303038152906040528051906020012060001c61287b565b90506114f0612f5d565b61150784604001518761259990919063ffffffff16565b9050611511612f5d565b61153e61152b84886000015161259990919063ffffffff16565b86600001516126ce90919063ffffffff16565b905061155381836128b390919063ffffffff16565b611563576000935050505061162c565b6115e261159d866060015160006040518060400160405290816000820154815260200160018201548152505061259990919063ffffffff16565b6115d4876040015160026040518060400160405290816000820154815260200160018201548152505061259990919063ffffffff16565b6126ce90919063ffffffff16565b91506116116115fe84886020015161259990919063ffffffff16565b86602001516126ce90919063ffffffff16565b905061162681836128b390919063ffffffff16565b93505050505b9392505050565b600061163d612f77565b6008604080602002604051908101604052809291906000905b82821015611692578382600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190611656565b5050505090506116a0612f77565b6088604080602002604051908101604052809291906000905b828210156116f55783826002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906116b9565b505050509050611703612fa5565b600260405180604001604052908160008201548152602001600182015481525050816102e00181905250600060405180604001604052908160008201548152602001600182015481525050816102c001819052506117af8560000151600001518660000151602001518760200151600001518860200151602001516040516020016117919493929190614108565b6040516020818303038152906040528051906020012060001c61287b565b8160000181815250506118108560200151600001518660200151602001518760000151600001518860000151602001516040516020016117f29493929190614108565b6040516020818303038152906040528051906020012060001c61287b565b81602001818152505061182681600001516128db565b81610100018190525061184461183f826000015161297b565b6128db565b81610120018190525061185a8160200151612a45565b81604001818152505061188661188182602001518360200151612a7190919063ffffffff16565b61287b565b8160600181815250506118b26118ad82602001518360600151612a7190919063ffffffff16565b61287b565b8160800181815250506118c56002612aab565b8161014001819052506119268560400151600001518660400151602001518760600151600001518860600151602001516040516020016119089493929190614108565b6040516020818303038152906040528051906020012060001c61287b565b8160a001818152505061194a8160a001518260a00151612a7190919063ffffffff16565b8160c0018181525050611a0c6119718260c00151876060015161259990919063ffffffff16565b6119fe61198f8460a00151896040015161259990919063ffffffff16565b6119f06119ba86608001518c6001600281106119a757fe5b602002015161259990919063ffffffff16565b6119e287606001518d6000600281106119cf57fe5b602002015161259990919063ffffffff16565b6126ce90919063ffffffff16565b6126ce90919063ffffffff16565b6126ce90919063ffffffff16565b816102600181905250611a84611a3c611a29836101400151612b48565b8360800151612a7190919063ffffffff16565b611a76611a4d846101000151612bab565b611a6885606001518660200151612c1190919063ffffffff16565b612a7190919063ffffffff16565b612c1190919063ffffffff16565b8160e0018181525050611add611aca611aa1836101400151612b48565b611abc84602001518560800151612a7190919063ffffffff16565b612a7190919063ffffffff16565b8260e00151612c1190919063ffffffff16565b8160e0018181525050611b45611b058660a00151836102e0015161259990919063ffffffff16565b611b37611b238460e001518960800151612c1190919063ffffffff16565b846102c0015161259990919063ffffffff16565b6126ce90919063ffffffff16565b816102800181905250611b6b8161028001518261026001516128b390919063ffffffff16565b611b7b57600093505050506123c8565b611b83612f5d565b611bb4611ba18360a00151886020015161259990919063ffffffff16565b87600001516126ce90919063ffffffff16565b905060008090505b8660e0015151811015611dce576000611c718860e001518381518110611bde57fe5b6020026020010151600001518960e001518481518110611bfa57fe5b6020026020010151602001518a61010001518581518110611c1757fe5b6020026020010151600001518b61010001518681518110611c3457fe5b602002602001015160200151604051602001611c539493929190614108565b6040516020818303038152906040528051906020012060001c61287b565b9050808461016001518360068110611c8557fe5b602002018181525050611ca9611ca48283612a7190919063ffffffff16565b61287b565b846101a001518360068110611cba57fe5b602002018181525050611ce1846101a001518360068110611cd757fe5b602002015161297b565b846101c001518360068110611cf257fe5b6020020181815250508760e001518281518110611d0b57fe5b6020026020010151846102a00181905250611d5b611d4c856101a001518460068110611d3357fe5b6020020151866102a0015161259990919063ffffffff16565b846126ce90919063ffffffff16565b92508761010001518281518110611d6e57fe5b6020026020010151846102a00181905250611dbe611daf856101c001518460068110611d9657fe5b6020020151866102a0015161259990919063ffffffff16565b846126ce90919063ffffffff16565b9250508080600101915050611bbc565b5060008090505b6040811015612270576000811415611f045760008090505b8760e0015151811015611e965760008461016001518260068110611e0d57fe5b602002015190506000821415611e3d57808561020001518460408110611e2f57fe5b602002018181525050611e88565b611e6d611e68828761020001518660408110611e5557fe5b6020020151612a7190919063ffffffff16565b61287b565b8561020001518460408110611e7e57fe5b6020020181815250505b508080600101915050611ded565b508261020001518160408110611ea857fe5b60200201518361024001518260408110611ebe57fe5b602002018181525050611ee58361020001518260408110611edb57fe5b602002015161297b565b8361020001518260408110611ef657fe5b602002018181525050611fff565b6000611f15828960e0015151612c56565b9050611f70611f6b856101a00151838b60e00151510360068110611f3557fe5b6020020151866102000151611f4c60018603612c9b565b860360408110611f5857fe5b6020020151612a7190919063ffffffff16565b61287b565b8461020001518360408110611f8157fe5b602002018181525050611fe3611fde856101c00151838b60e00151510360068110611fa857fe5b6020020151866102400151611fbf60018603612c9b565b860360408110611fcb57fe5b6020020151612a7190919063ffffffff16565b61287b565b8461024001518360408110611ff457fe5b602002018181525050505b826102000151816040811061201057fe5b6020020151836101e00151826040811061202657fe5b602002018181525050826102400151816040811061204057fe5b6020020151836102200151826040811061205657fe5b6020020181815250506120a28360200151612094896101200151866101e00151856040811061208157fe5b6020020151612a7190919063ffffffff16565b612ce390919063ffffffff16565b836101e0015182604081106120b357fe5b6020020181815250506120e987610140015184610220015183604081106120d657fe5b6020020151612a7190919063ffffffff16565b83610220015182604081106120fa57fe5b602002018181525050602081101561217e5761215f61213b846101400151836020811061212357fe5b60200201518560600151612a7190919063ffffffff16565b846102200151836040811061214c57fe5b6020020151612c1190919063ffffffff16565b836102200151826040811061217057fe5b6020020181815250506121f6565b6121db6121b78461014001516020848161219457fe5b066020811061219f57fe5b60200201518560800151612a7190919063ffffffff16565b84610220015183604081106121c857fe5b6020020151612c1190919063ffffffff16565b83610220015182604081106121ec57fe5b6020020181815250505b612249836020015161223b856101200151846040811061221257fe5b6020020151866102200151856040811061222857fe5b6020020151612a7190919063ffffffff16565b612c1190919063ffffffff16565b836102200151826040811061225a57fe5b6020020181815250508080600101915050611dd5565b5060006122a9876080015160405160200161228b91906140c1565b6040516020818303038152906040528051906020012060001c61287b565b905061238f6122ca8860c00151856102e0015161259990919063ffffffff16565b6123816123446123156123068c608001516122f88e61014001518f6101200151612a7190919063ffffffff16565b612c1190919063ffffffff16565b86612a7190919063ffffffff16565b60046040518060400160405290816000820154815260200160018201548152505061259990919063ffffffff16565b61237361235689896102200151612d1d565b6123658b8a6101e00151612d1d565b6126ce90919063ffffffff16565b6126ce90919063ffffffff16565b6126ce90919063ffffffff16565b8361028001819052508160000151836102800151600001511480156123c05750816020015183610280015160200151145b955050505050505b92915050565b60006123d8612f5d565b604051806040016040528060018152602001600281525090506000612423604051602001612405906140ac565b6040516020818303038152906040528051906020012060001c61287b565b905060008590505b848110801561243d5750600260200281105b156124c05761247681830160405160200161245891906140c1565b6040516020818303038152906040528051906020012060001c61287b565b935061248b848461259990919063ffffffff16565b6008826040811061249857fe5b600202016000820151816000015560208201518160010155905050808060010191505061242b565b5060006124f36040516020016124d590614097565b6040516020818303038152906040528051906020012060001c61287b565b905060008690505b858110801561250d5750600260200281105b156125905761254682820160405160200161252891906140c1565b6040516020818303038152906040528051906020012060001c61287b565b945061255b858561259990919063ffffffff16565b6088826040811061256857fe5b60020201600082015181600001556020820151816001015590505080806001019150506124fb565b50505050505050565b6125a1612f5d565b60018214156125b257829050612638565b60028214156125cc576125c583846126ce565b9050612638565b6125d46130ba565b8360000151816000600381106125e657fe5b60200201818152505083602001518160016003811061260157fe5b602002018181525050828160026003811061261857fe5b6020020181815250506040826060836007600019fa61263657600080fd5b505b92915050565b612646612f5d565b6000826000015114801561265e575060008260200151145b1561268157604051806040016040528060008152602001600081525090506126c9565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050604051806040016040528084600001518152602001846020015183038152509150505b919050565b6126d6612f5d565b6126de6130dc565b8360000151816000600481106126f057fe5b60200201818152505083602001518160016004811061270b57fe5b60200201818152505082600001518160026004811061272657fe5b60200201818152505082602001518160036004811061274157fe5b6020020181815250506040826080836006600019fa61275f57600080fd5b5092915050565b6000806127c18460000151600001518560000151602001518660200151600001518760200151602001516040516020016127a39493929190614108565b6040516020818303038152906040528051906020012060001c61287b565b905060006127f7846040516020016127d99190614080565b6040516020818303038152906040528051906020012060001c61287b565b9050600061282f83836040516020016128119291906140dc565b6040516020818303038152906040528051906020012060001c61287b565b90506128468a8a8860000151896040015185612dd3565b6128565760009350505050612871565b61286b88888860200151896040015185612dd3565b93505050505b9695505050505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190508083816128aa57fe5b06915050919050565b6000816000015183600001511480156128d3575081602001518360200151145b905092915050565b6128e36130fe565b6001816000604081106128f257fe5b602002018181525050818160016040811061290957fe5b6020020181815250506000600290505b60026020028110156129755761295361294e8484600185036040811061293b57fe5b6020020151612a7190919063ffffffff16565b61287b565b82826040811061295f57fe5b6020020181815250508080600101915050612919565b50919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050600083905060008114156129ba57600092505050612a40565b818111156129cf578181816129cb57fe5b0690505b600080600190506000849050600084905060005b60008214612a18578183816129f457fe5b049050838482028603838484028603809550819650829750839850505050506129e3565b6000851215612a3557846000038703975050505050505050612a40565b849750505050505050505b919050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190508080612a9f57fe5b83850991505092915050565b612ab3613121565b600181600060208110612ac257fe5b6020020181815250508181600160208110612ad957fe5b6020020181815250506000600290505b6020811015612b4257612b20612b1b84846001850360208110612b0857fe5b6020020151612a7190919063ffffffff16565b61287b565b828260208110612b2c57fe5b6020020181815250508080600101915050612ae9565b50919050565b60008082600060208110612b5857fe5b602002015190506000600190505b6020811015612ba157612b92848260208110612b7e57fe5b602002015183612ce390919063ffffffff16565b91508080600101915050612b66565b5080915050919050565b60008082600060408110612bbb57fe5b602002015190506000600190505b6002602002811015612c0757612bf8848260408110612be457fe5b602002015183612ce390919063ffffffff16565b91508080600101915050612bc9565b5080915050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905082841015612c49578383820301612c4d565b8284035b91505092915050565b600080826001901b905060005b8185108015612c725750600082115b15612c8b57600182901c91508080600101915050612c63565b8084600101039250505092915050565b6000808290506000811415612cb4576001915050612cde565b6000600190505b6000821115612cd857600281029050818060019003925050612cbb565b80925050505b919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190508080612d1157fe5b83850891505092915050565b612d25612f5d565b612d2d612f5d565b612d6283600060408110612d3d57fe5b602002015185600060408110612d4f57fe5b602002015161259990919063ffffffff16565b90506000600190505b6040811015612dc857612db9612daa858360408110612d8657fe5b6020020151878460408110612d9757fe5b602002015161259990919063ffffffff16565b836126ce90919063ffffffff16565b91508080600101915050612d6b565b508091505092915050565b6000612de8838761259990919063ffffffff16565b9550612e0f84612e01848861259990919063ffffffff16565b6126ce90919063ffffffff16565b9450612e2485876128b390919063ffffffff16565b905095945050505050565b6040518060400160405280612e42612f43565b8152602001612e4f612f43565b81525090565b6040518060600160405280612e68612f43565b8152602001612e75612f43565b8152602001600081525090565b60405180604001604052806002905b612e99612f43565b815260200190600190039081612e915790505090565b6040518060800160405280612ec2613144565b8152602001612ecf613192565b8152602001612edc6131bf565b8152602001612ee96131f3565b81525090565b6040518060c00160405280612f02612f43565b8152602001612f0f612f43565b8152602001612f1c613265565b8152602001612f296132a5565b8152602001612f366132a5565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060008152602001600081525090565b6040518061080001604052806040905b612f8f612f43565b815260200190600190039081612f875790505090565b6040518061030001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001612ff16132cb565b8152602001612ffe6132cb565b815260200161300b6132ee565b8152602001613018613311565b8152602001613025613311565b8152602001613032613311565b815260200161303f613311565b815260200161304c6132cb565b81526020016130596132cb565b81526020016130666132cb565b81526020016130736132cb565b8152602001613080612f43565b815260200161308d612f43565b815260200161309a612f43565b81526020016130a7612f43565b81526020016130b4612f43565b81525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806108000160405280604090602082028038833980820191505090505090565b604051806104000160405280602090602082028038833980820191505090505090565b6040518060c00160405280613157612f43565b8152602001613164612f43565b8152602001613171612f43565b815260200161317e612f43565b815260200160008152602001600081525090565b60405180606001604052806131a5612f43565b81526020016131b2612f43565b8152602001600081525090565b60405180608001604052806131d2612f43565b81526020016131df612f43565b815260200160008152602001600081525090565b604051806101600160405280613207612f43565b8152602001613214612f43565b8152602001613221612f43565b815260200161322e612f43565b8152602001600081526020016000815260200160008152602001606081526020016060815260200160008152602001600081525090565b6040518060800160405280613278612f43565b8152602001613285612f43565b8152602001613292612f43565b815260200161329f612f43565b81525090565b60405180604001604052806132b8612f43565b81526020016132c5612f43565b81525090565b604051806108000160405280604090602082028038833980820191505090505090565b604051806104000160405280602090602082028038833980820191505090505090565b6040518060c00160405280600690602082028038833980820191505090505090565b600082601f83011261334457600080fd5b81356133576133528261430d565b6142e0565b9150818183526020840193506020810190508385604084028201111561337c57600080fd5b60005b838110156133ac5781613392888261395c565b84526020840193506040830192505060018101905061337f565b5050505092915050565b600082601f8301126133c757600080fd5b600a6133da6133d582614335565b6142e0565b915081838560208402820111156133f057600080fd5b60005b8381101561342057816134068882613c04565b8452602084019350602083019250506001810190506133f3565b5050505092915050565b600082601f83011261343b57600080fd5b600c61344e61344982614357565b6142e0565b9150818385602084028201111561346457600080fd5b60005b83811015613494578161347a8882613c04565b845260208401935060208301925050600181019050613467565b5050505092915050565b600082601f8301126134af57600080fd5b60026134c26134bd82614379565b6142e0565b915081838560208402820111156134d857600080fd5b60005b8381101561350857816134ee8882613c04565b8452602084019350602083019250506001810190506134db565b5050505092915050565b600082601f83011261352357600080fd5b60286135366135318261439b565b6142e0565b9150818385602084028201111561354c57600080fd5b60005b8381101561357c57816135628882613c04565b84526020840193506020830192505060018101905061354f565b5050505092915050565b600082601f83011261359757600080fd5b60046135aa6135a5826143bd565b6142e0565b915081838560208402820111156135c057600080fd5b60005b838110156135f057816135d68882613c04565b8452602084019350602083019250506001810190506135c3565b5050505092915050565b600082601f83011261360b57600080fd5b813561361e613619826143df565b6142e0565b9150818183526020840193506020810190508385602084028201111561364357600080fd5b60005b8381101561367357816136598882613c04565b845260208401935060208301925050600181019050613646565b5050505092915050565b600082601f83011261368e57600080fd5b81356136a161369c82614407565b6142e0565b915081818352602084019350602081019050838560208402820111156136c657600080fd5b60005b838110156136f657816136dc8882613c04565b8452602084019350602083019250506001810190506136c9565b5050505092915050565b60006101e0828403121561371357600080fd5b61371e6101606142e0565b9050600061372e8482850161395c565b60008301525060406137428482850161395c565b60208301525060806137568482850161395c565b60408301525060c061376a8482850161395c565b60608301525061010061377f84828501613c04565b60808301525061012061379484828501613c04565b60a0830152506101406137a984828501613c04565b60c08301525061016082013567ffffffffffffffff8111156137ca57600080fd5b6137d684828501613333565b60e08301525061018082013567ffffffffffffffff8111156137f757600080fd5b61380384828501613333565b610100830152506101a061381984828501613c04565b610120830152506101c061382f84828501613c04565b6101408301525092915050565b600060c0828403121561384e57600080fd5b61385860806142e0565b905060006138688482850161395c565b600083015250604061387c8482850161395c565b602083015250608061389084828501613c04565b60408301525060a06138a484828501613c04565b60608301525092915050565b6000608082840312156138c257600080fd5b6138cc60406142e0565b905060006138dc8482850161395c565b60008301525060406138f08482850161395c565b60208301525092915050565b600060a0828403121561390e57600080fd5b61391860606142e0565b905060006139288482850161395c565b600083015250604061393c8482850161395c565b602083015250608061395084828501613c04565b60408301525092915050565b60006040828403121561396e57600080fd5b61397860406142e0565b9050600061398884828501613c04565b600083015250602061399c84828501613c04565b60208301525092915050565b600061010082840312156139bb57600080fd5b6139c560806142e0565b905060006139d58482850161395c565b60008301525060406139e98482850161395c565b60208301525060806139fd8482850161395c565b60408301525060c0613a118482850161395c565b60608301525092915050565b60006101408284031215613a3057600080fd5b613a3a60c06142e0565b90506000613a4a8482850161395c565b6000830152506040613a5e8482850161395c565b6020830152506080613a728482850161395c565b60408301525060c0613a868482850161395c565b606083015250610100613a9b84828501613c04565b608083015250610120613ab084828501613c04565b60a08301525092915050565b60006102c08284031215613acf57600080fd5b613ad960806142e0565b90506000613ae984828501613a1d565b600083015250610140613afe848285016138fc565b6020830152506101e0613b138482850161383c565b6040830152506102a082013567ffffffffffffffff811115613b3457600080fd5b613b4084828501613700565b60608301525092915050565b60006102a08284031215613b5f57600080fd5b613b6960c06142e0565b90506000613b798482850161395c565b6000830152506040613b8d8482850161395c565b6020830152506080613ba1848285016139a8565b604083015250610180613bb6848285016138b0565b606083015250610200613bcb848285016138b0565b60808301525061028082013567ffffffffffffffff811115613bec57600080fd5b613bf8848285016135fa565b60a08301525092915050565b600081359050613c13816144e2565b92915050565b6000806000806000806000610a00888a031215613c3557600080fd5b6000613c438a828b01613512565b975050610500613c558a828b016133b6565b965050610640613c678a828b0161342a565b9550506107c0613c798a828b0161342a565b945050610940613c8b8a828b01613586565b9350506109c0613c9d8a828b01613c04565b9250506109e0613caf8a828b01613c04565b91505092959891949750929550565b60008060408385031215613cd157600080fd5b600083013567ffffffffffffffff811115613ceb57600080fd5b613cf785828601613abc565b925050602083013567ffffffffffffffff811115613d1457600080fd5b613d2085828601613b4c565b9150509250929050565b600060208284031215613d3c57600080fd5b6000613d4a84828501613c04565b91505092915050565b6000806000806000806101a08789031215613d6d57600080fd5b6000613d7b89828a01613c04565b9650506020613d8c89828a0161349e565b9550506060613d9d89828a01613586565b94505060e0613dae89828a01613c04565b935050610100613dc089828a01613586565b92505061018087013567ffffffffffffffff811115613dde57600080fd5b613dea89828a0161367d565b9150509295509295509295565b6000613e03838361405a565b60208301905092915050565b6000613e1a8261443f565b613e248185614457565b9350613e2f8361442f565b8060005b83811015613e60578151613e478882613df7565b9750613e528361444a565b925050600181019050613e33565b5085935050505092915050565b613e768161447e565b82525050565b613e85816144b4565b82525050565b6000613e98601683614462565b91507f63742076616c69642070726f6f6620696e76616c6964000000000000000000006000830152602082019050919050565b6000613ed8600383614473565b91507f68767300000000000000000000000000000000000000000000000000000000006000830152600382019050919050565b6000613f18601b83614462565b91507f616767726174652072616e67652070726f6f6620696e76616c696400000000006000830152602082019050919050565b6000613f58601983614462565b91507f657175616c2070726f6f6620766572696679206661696c6564000000000000006000830152602082019050919050565b6000613f98601783614462565b91507f70746520657175616c2070726f6f6620696e76616c69640000000000000000006000830152602082019050919050565b6000613fd8601683614462565b91507f646c65207369676d612070726f6f66206661696c6564000000000000000000006000830152602082019050919050565b6000614018600383614473565b91507f67767300000000000000000000000000000000000000000000000000000000006000830152600382019050919050565b614054816144aa565b82525050565b614063816144aa565b82525050565b61407a614075826144aa565b6144d8565b82525050565b600061408c8284613e0f565b915081905092915050565b60006140a282613ecb565b9150819050919050565b60006140b78261400b565b9150819050919050565b60006140cd8284614069565b60208201915081905092915050565b60006140e88285614069565b6020820191506140f88284614069565b6020820191508190509392505050565b60006141148287614069565b6020820191506141248286614069565b6020820191506141348285614069565b6020820191506141448284614069565b60208201915081905095945050505050565b60006141628289614069565b6020820191506141728288614069565b6020820191506141828287614069565b6020820191506141928286614069565b6020820191506141a28285614069565b6020820191506141b28284614069565b602082019150819050979650505050505050565b60006020820190506141db6000830184613e6d565b92915050565b60006020820190506141f66000830184613e7c565b92915050565b6000602082019050818103600083015261421581613e8b565b9050919050565b6000602082019050818103600083015261423581613f0b565b9050919050565b6000602082019050818103600083015261425581613f4b565b9050919050565b6000602082019050818103600083015261427581613f8b565b9050919050565b6000602082019050818103600083015261429581613fcb565b9050919050565b60006020820190506142b1600083018461404b565b92915050565b60006040820190506142cc600083018561404b565b6142d9602083018461404b565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561430357600080fd5b8060405250919050565b600067ffffffffffffffff82111561432457600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561434c57600080fd5b602082029050919050565b600067ffffffffffffffff82111561436e57600080fd5b602082029050919050565b600067ffffffffffffffff82111561439057600080fd5b602082029050919050565b600067ffffffffffffffff8211156143b257600080fd5b602082029050919050565b600067ffffffffffffffff8211156143d457600080fd5b602082029050919050565b600067ffffffffffffffff8211156143f657600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561441e57600080fd5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006144bf826144c6565b9050919050565b60006144d18261448a565b9050919050565b6000819050919050565b6144eb816144aa565b81146144f657600080fd5b5056fea365627a7a72315820216791aca83dc34698f3a8dd2acb1c6a4b13aafc710c609837eabf6a2ddf3a476c6578706572696d656e74616cf564736f6c63430005100040"

// DeploySdctverifier deploys a new Ethereum contract, binding an instance of Sdctverifier to it.
func DeploySdctverifier(auth *bind.TransactOpts, backend bind.ContractBackend, sdctSetup_ common.Address) (common.Address, *types.Transaction, *Sdctverifier, error) {
	parsed, err := abi.JSON(strings.NewReader(SdctverifierABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SdctverifierBin), backend, sdctSetup_)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Sdctverifier{SdctverifierCaller: SdctverifierCaller{contract: contract}, SdctverifierTransactor: SdctverifierTransactor{contract: contract}, SdctverifierFilterer: SdctverifierFilterer{contract: contract}}, nil
}

// Sdctverifier is an auto generated Go binding around an Ethereum contract.
type Sdctverifier struct {
	SdctverifierCaller     // Read-only binding to the contract
	SdctverifierTransactor // Write-only binding to the contract
	SdctverifierFilterer   // Log filterer for contract events
}

// SdctverifierCaller is an auto generated read-only Go binding around an Ethereum contract.
type SdctverifierCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SdctverifierTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SdctverifierTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SdctverifierFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SdctverifierFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SdctverifierSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SdctverifierSession struct {
	Contract     *Sdctverifier     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SdctverifierCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SdctverifierCallerSession struct {
	Contract *SdctverifierCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// SdctverifierTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SdctverifierTransactorSession struct {
	Contract     *SdctverifierTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// SdctverifierRaw is an auto generated low-level Go binding around an Ethereum contract.
type SdctverifierRaw struct {
	Contract *Sdctverifier // Generic contract binding to access the raw methods on
}

// SdctverifierCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SdctverifierCallerRaw struct {
	Contract *SdctverifierCaller // Generic read-only contract binding to access the raw methods on
}

// SdctverifierTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SdctverifierTransactorRaw struct {
	Contract *SdctverifierTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSdctverifier creates a new instance of Sdctverifier, bound to a specific deployed contract.
func NewSdctverifier(address common.Address, backend bind.ContractBackend) (*Sdctverifier, error) {
	contract, err := bindSdctverifier(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Sdctverifier{SdctverifierCaller: SdctverifierCaller{contract: contract}, SdctverifierTransactor: SdctverifierTransactor{contract: contract}, SdctverifierFilterer: SdctverifierFilterer{contract: contract}}, nil
}

// NewSdctverifierCaller creates a new read-only instance of Sdctverifier, bound to a specific deployed contract.
func NewSdctverifierCaller(address common.Address, caller bind.ContractCaller) (*SdctverifierCaller, error) {
	contract, err := bindSdctverifier(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SdctverifierCaller{contract: contract}, nil
}

// NewSdctverifierTransactor creates a new write-only instance of Sdctverifier, bound to a specific deployed contract.
func NewSdctverifierTransactor(address common.Address, transactor bind.ContractTransactor) (*SdctverifierTransactor, error) {
	contract, err := bindSdctverifier(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SdctverifierTransactor{contract: contract}, nil
}

// NewSdctverifierFilterer creates a new log filterer instance of Sdctverifier, bound to a specific deployed contract.
func NewSdctverifierFilterer(address common.Address, filterer bind.ContractFilterer) (*SdctverifierFilterer, error) {
	contract, err := bindSdctverifier(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SdctverifierFilterer{contract: contract}, nil
}

// bindSdctverifier binds a generic wrapper to an already deployed contract.
func bindSdctverifier(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SdctverifierABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Sdctverifier *SdctverifierRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Sdctverifier.Contract.SdctverifierCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Sdctverifier *SdctverifierRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Sdctverifier.Contract.SdctverifierTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Sdctverifier *SdctverifierRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Sdctverifier.Contract.SdctverifierTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Sdctverifier *SdctverifierCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Sdctverifier.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Sdctverifier *SdctverifierTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Sdctverifier.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Sdctverifier *SdctverifierTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Sdctverifier.Contract.contract.Transact(opts, method, params...)
}

// BitSize is a free data retrieval call binding the contract method 0x3e8d3764.
//
// Solidity: function bitSize() view returns(uint256)
func (_Sdctverifier *SdctverifierCaller) BitSize(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Sdctverifier.contract.Call(opts, out, "bitSize")
	return *ret0, err
}

// BitSize is a free data retrieval call binding the contract method 0x3e8d3764.
//
// Solidity: function bitSize() view returns(uint256)
func (_Sdctverifier *SdctverifierSession) BitSize() (*big.Int, error) {
	return _Sdctverifier.Contract.BitSize(&_Sdctverifier.CallOpts)
}

// BitSize is a free data retrieval call binding the contract method 0x3e8d3764.
//
// Solidity: function bitSize() view returns(uint256)
func (_Sdctverifier *SdctverifierCallerSession) BitSize() (*big.Int, error) {
	return _Sdctverifier.Contract.BitSize(&_Sdctverifier.CallOpts)
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierCaller) G(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Sdctverifier.contract.Call(opts, out, "g")
	return *ret, err
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierSession) G() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Sdctverifier.Contract.G(&_Sdctverifier.CallOpts)
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierCallerSession) G() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Sdctverifier.Contract.G(&_Sdctverifier.CallOpts)
}

// GVector is a free data retrieval call binding the contract method 0x0c00f8a0.
//
// Solidity: function gVector(uint256 ) view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierCaller) GVector(opts *bind.CallOpts, arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Sdctverifier.contract.Call(opts, out, "gVector", arg0)
	return *ret, err
}

// GVector is a free data retrieval call binding the contract method 0x0c00f8a0.
//
// Solidity: function gVector(uint256 ) view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierSession) GVector(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Sdctverifier.Contract.GVector(&_Sdctverifier.CallOpts, arg0)
}

// GVector is a free data retrieval call binding the contract method 0x0c00f8a0.
//
// Solidity: function gVector(uint256 ) view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierCallerSession) GVector(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Sdctverifier.Contract.GVector(&_Sdctverifier.CallOpts, arg0)
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierCaller) H(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Sdctverifier.contract.Call(opts, out, "h")
	return *ret, err
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierSession) H() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Sdctverifier.Contract.H(&_Sdctverifier.CallOpts)
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierCallerSession) H() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Sdctverifier.Contract.H(&_Sdctverifier.CallOpts)
}

// HVector is a free data retrieval call binding the contract method 0x56e2736c.
//
// Solidity: function hVector(uint256 ) view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierCaller) HVector(opts *bind.CallOpts, arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Sdctverifier.contract.Call(opts, out, "hVector", arg0)
	return *ret, err
}

// HVector is a free data retrieval call binding the contract method 0x56e2736c.
//
// Solidity: function hVector(uint256 ) view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierSession) HVector(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Sdctverifier.Contract.HVector(&_Sdctverifier.CallOpts, arg0)
}

// HVector is a free data retrieval call binding the contract method 0x56e2736c.
//
// Solidity: function hVector(uint256 ) view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierCallerSession) HVector(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Sdctverifier.Contract.HVector(&_Sdctverifier.CallOpts, arg0)
}

// N is a free data retrieval call binding the contract method 0x2e52d606.
//
// Solidity: function n() view returns(uint256)
func (_Sdctverifier *SdctverifierCaller) N(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Sdctverifier.contract.Call(opts, out, "n")
	return *ret0, err
}

// N is a free data retrieval call binding the contract method 0x2e52d606.
//
// Solidity: function n() view returns(uint256)
func (_Sdctverifier *SdctverifierSession) N() (*big.Int, error) {
	return _Sdctverifier.Contract.N(&_Sdctverifier.CallOpts)
}

// N is a free data retrieval call binding the contract method 0x2e52d606.
//
// Solidity: function n() view returns(uint256)
func (_Sdctverifier *SdctverifierCallerSession) N() (*big.Int, error) {
	return _Sdctverifier.Contract.N(&_Sdctverifier.CallOpts)
}

// Pkauth is a free data retrieval call binding the contract method 0x0214120b.
//
// Solidity: function pkauth() view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierCaller) Pkauth(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Sdctverifier.contract.Call(opts, out, "pkauth")
	return *ret, err
}

// Pkauth is a free data retrieval call binding the contract method 0x0214120b.
//
// Solidity: function pkauth() view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierSession) Pkauth() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Sdctverifier.Contract.Pkauth(&_Sdctverifier.CallOpts)
}

// Pkauth is a free data retrieval call binding the contract method 0x0214120b.
//
// Solidity: function pkauth() view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierCallerSession) Pkauth() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Sdctverifier.Contract.Pkauth(&_Sdctverifier.CallOpts)
}

// SdctSetup is a free data retrieval call binding the contract method 0x718aece7.
//
// Solidity: function sdctSetup() view returns(address)
func (_Sdctverifier *SdctverifierCaller) SdctSetup(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Sdctverifier.contract.Call(opts, out, "sdctSetup")
	return *ret0, err
}

// SdctSetup is a free data retrieval call binding the contract method 0x718aece7.
//
// Solidity: function sdctSetup() view returns(address)
func (_Sdctverifier *SdctverifierSession) SdctSetup() (common.Address, error) {
	return _Sdctverifier.Contract.SdctSetup(&_Sdctverifier.CallOpts)
}

// SdctSetup is a free data retrieval call binding the contract method 0x718aece7.
//
// Solidity: function sdctSetup() view returns(address)
func (_Sdctverifier *SdctverifierCallerSession) SdctSetup() (common.Address, error) {
	return _Sdctverifier.Contract.SdctSetup(&_Sdctverifier.CallOpts)
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierCaller) UBase(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Sdctverifier.contract.Call(opts, out, "uBase")
	return *ret, err
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierSession) UBase() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Sdctverifier.Contract.UBase(&_Sdctverifier.CallOpts)
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() view returns(uint256 X, uint256 Y)
func (_Sdctverifier *SdctverifierCallerSession) UBase() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Sdctverifier.Contract.UBase(&_Sdctverifier.CallOpts)
}

// Verify is a free data retrieval call binding the contract method 0xcccae028.
//
// Solidity: function verify(uint256[40] points, uint256[10] scalar, uint256[12] l, uint256[12] r, uint256[4] ct, uint256 nonce, uint256 token) view returns(bool)
func (_Sdctverifier *SdctverifierCaller) Verify(opts *bind.CallOpts, points [40]*big.Int, scalar [10]*big.Int, l [12]*big.Int, r [12]*big.Int, ct [4]*big.Int, nonce *big.Int, token *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Sdctverifier.contract.Call(opts, out, "verify", points, scalar, l, r, ct, nonce, token)
	return *ret0, err
}

// Verify is a free data retrieval call binding the contract method 0xcccae028.
//
// Solidity: function verify(uint256[40] points, uint256[10] scalar, uint256[12] l, uint256[12] r, uint256[4] ct, uint256 nonce, uint256 token) view returns(bool)
func (_Sdctverifier *SdctverifierSession) Verify(points [40]*big.Int, scalar [10]*big.Int, l [12]*big.Int, r [12]*big.Int, ct [4]*big.Int, nonce *big.Int, token *big.Int) (bool, error) {
	return _Sdctverifier.Contract.Verify(&_Sdctverifier.CallOpts, points, scalar, l, r, ct, nonce, token)
}

// Verify is a free data retrieval call binding the contract method 0xcccae028.
//
// Solidity: function verify(uint256[40] points, uint256[10] scalar, uint256[12] l, uint256[12] r, uint256[4] ct, uint256 nonce, uint256 token) view returns(bool)
func (_Sdctverifier *SdctverifierCallerSession) Verify(points [40]*big.Int, scalar [10]*big.Int, l [12]*big.Int, r [12]*big.Int, ct [4]*big.Int, nonce *big.Int, token *big.Int) (bool, error) {
	return _Sdctverifier.Contract.Verify(&_Sdctverifier.CallOpts, points, scalar, l, r, ct, nonce, token)
}

// VerifyBurn is a free data retrieval call binding the contract method 0x26f9031b.
//
// Solidity: function verifyBurn(uint256 amount, uint256[2] publicKey, uint256[4] proof, uint256 z, uint256[4] ub, uint256[] input) view returns(bool)
func (_Sdctverifier *SdctverifierCaller) VerifyBurn(opts *bind.CallOpts, amount *big.Int, publicKey [2]*big.Int, proof [4]*big.Int, z *big.Int, ub [4]*big.Int, input []*big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Sdctverifier.contract.Call(opts, out, "verifyBurn", amount, publicKey, proof, z, ub, input)
	return *ret0, err
}

// VerifyBurn is a free data retrieval call binding the contract method 0x26f9031b.
//
// Solidity: function verifyBurn(uint256 amount, uint256[2] publicKey, uint256[4] proof, uint256 z, uint256[4] ub, uint256[] input) view returns(bool)
func (_Sdctverifier *SdctverifierSession) VerifyBurn(amount *big.Int, publicKey [2]*big.Int, proof [4]*big.Int, z *big.Int, ub [4]*big.Int, input []*big.Int) (bool, error) {
	return _Sdctverifier.Contract.VerifyBurn(&_Sdctverifier.CallOpts, amount, publicKey, proof, z, ub, input)
}

// VerifyBurn is a free data retrieval call binding the contract method 0x26f9031b.
//
// Solidity: function verifyBurn(uint256 amount, uint256[2] publicKey, uint256[4] proof, uint256 z, uint256[4] ub, uint256[] input) view returns(bool)
func (_Sdctverifier *SdctverifierCallerSession) VerifyBurn(amount *big.Int, publicKey [2]*big.Int, proof [4]*big.Int, z *big.Int, ub [4]*big.Int, input []*big.Int) (bool, error) {
	return _Sdctverifier.Contract.VerifyBurn(&_Sdctverifier.CallOpts, amount, publicKey, proof, z, ub, input)
}

// VerifyTransfer is a free data retrieval call binding the contract method 0x4a3f2867.
//
// Solidity: function verifyTransfer((((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256),((uint256,uint256),(uint256,uint256),uint256),((uint256,uint256),(uint256,uint256),uint256,uint256),((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,(uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) proof, ((uint256,uint256),(uint256,uint256),((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256)),((uint256,uint256),(uint256,uint256)),((uint256,uint256),(uint256,uint256)),uint256[]) state) view returns(bool)
func (_Sdctverifier *SdctverifierCaller) VerifyTransfer(opts *bind.CallOpts, proof SDCTVerifierTransferProof, state SDCTVerifierTransferStatement) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Sdctverifier.contract.Call(opts, out, "verifyTransfer", proof, state)
	return *ret0, err
}

// VerifyTransfer is a free data retrieval call binding the contract method 0x4a3f2867.
//
// Solidity: function verifyTransfer((((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256),((uint256,uint256),(uint256,uint256),uint256),((uint256,uint256),(uint256,uint256),uint256,uint256),((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,(uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) proof, ((uint256,uint256),(uint256,uint256),((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256)),((uint256,uint256),(uint256,uint256)),((uint256,uint256),(uint256,uint256)),uint256[]) state) view returns(bool)
func (_Sdctverifier *SdctverifierSession) VerifyTransfer(proof SDCTVerifierTransferProof, state SDCTVerifierTransferStatement) (bool, error) {
	return _Sdctverifier.Contract.VerifyTransfer(&_Sdctverifier.CallOpts, proof, state)
}

// VerifyTransfer is a free data retrieval call binding the contract method 0x4a3f2867.
//
// Solidity: function verifyTransfer((((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256),((uint256,uint256),(uint256,uint256),uint256),((uint256,uint256),(uint256,uint256),uint256,uint256),((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,(uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) proof, ((uint256,uint256),(uint256,uint256),((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256)),((uint256,uint256),(uint256,uint256)),((uint256,uint256),(uint256,uint256)),uint256[]) state) view returns(bool)
func (_Sdctverifier *SdctverifierCallerSession) VerifyTransfer(proof SDCTVerifierTransferProof, state SDCTVerifierTransferStatement) (bool, error) {
	return _Sdctverifier.Contract.VerifyTransfer(&_Sdctverifier.CallOpts, proof, state)
}

// Init is a paid mutator transaction binding the contract method 0xb7b0422d.
//
// Solidity: function init(uint256 step) returns()
func (_Sdctverifier *SdctverifierTransactor) Init(opts *bind.TransactOpts, step *big.Int) (*types.Transaction, error) {
	return _Sdctverifier.contract.Transact(opts, "init", step)
}

// Init is a paid mutator transaction binding the contract method 0xb7b0422d.
//
// Solidity: function init(uint256 step) returns()
func (_Sdctverifier *SdctverifierSession) Init(step *big.Int) (*types.Transaction, error) {
	return _Sdctverifier.Contract.Init(&_Sdctverifier.TransactOpts, step)
}

// Init is a paid mutator transaction binding the contract method 0xb7b0422d.
//
// Solidity: function init(uint256 step) returns()
func (_Sdctverifier *SdctverifierTransactorSession) Init(step *big.Int) (*types.Transaction, error) {
	return _Sdctverifier.Contract.Init(&_Sdctverifier.TransactOpts, step)
}
